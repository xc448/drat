% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/imputeAges.R
\name{ageImpute}
\alias{ageImpute}
\title{Impute missing ages in pedigree}
\usage{
ageImpute(
  ped,
  rel_l,
  proband,
  impute_times,
  max_iter_tries,
  penet_db,
  dist_age = AgeDistribution,
  penet_cbc_db = NULL
)
}
\arguments{
\item{ped}{A pedigree data frame returned by
\code{\link{.pedStructureCheck}}.}

\item{rel_l}{The list of relationships in \code{ped} returned by
\code{\link{.pedStructureCheck}}.}

\item{proband}{A numeric value or vector of the unique IDs in \code{ped}
corresponding to the proband(s).}

\item{impute_times}{The number of iterations to be imputed for missing ages.}

\item{max_iter_tries}{A numeric value indicating the maximum number of
iterations that should be attempted when multiply imputing missing ages.}

\item{penet_db}{The cancer penetrances for carriers returned by
\code{\link{buildDatabase}} in the \code{penet$penet_c} list component.}

\item{dist_age}{A list containing empirical distributions of female and male
ages at first birth; female and male birth ages; and sibling age
differences. The default is \code{\link{AgeDistribution}}.}

\item{penet_cbc_db}{A numeric array of contralateral cancer penetrance for
carriers returned by \code{\link{buildDatabase}} in the \code{penet$penet_cbc}
list component.}
}
\value{
A list where each component is a matrix of imputed ages
corresponding to \code{CurAge} (if one or more individuals in \code{ped} is missing
their current age) or \code{AgeX}, where \code{X} is a cancer for which one or more
individuals in \code{ped} is missing the affection age. Each matrix has
\code{impute_times} rows; the column names are the IDs of the individuals for
whom ages were imputed.
}
\description{
Imputes missing current, cancer affection, and death ages for relatives in
\code{ped}, subject to age-bounding information.
}
\details{
First, we impute the missing censoring ages (stored as \code{ped$CurAge}) of
living first-degree relatives, followed by second-degree relatives and then
more distant relatives. If more than one proband is supplied, the first one
will be used to determine first- and second-degree relatives.

Within each group of relatives, we estimate current age bounds for each
individual (see \code{\link{.getAgeFromPed}} documentation). The relative
with the narrowest age bound interval in the relative group has their
current age imputed first, from a normal distribution truncated by their age
bounds (see \code{\link{.currentAgeImpute}}  documentation). The pedigree is
updated with this relative's imputed age and the age bounds are then
re-calculated for the remaining relatives in the relative group. This
process repeats until no living individuals with missing censoring ages are
left in the relative group.

After all missing censoring ages for living relatives have been imputed, we
impute missing cancer affection ages. For each missing age, the upper bound
is the minimum of the individual's censoring age, their upper bound for this
cancer's affection age, and \code{PanelPRO:::MAXAGE}; the lower bound is the
maximum of their lower bound for this cancer's affection age, their ages of
preventative interventions (if relevant), and \code{1}. The affection age is
then sampled based on the crude SEER cancer penetrance estimates (subset by
the individual's race and sex) within the age bounds (see
\code{\link{.cancerAgeImpute}} documentation). If a missing cancer age
cannot be sampled such that it satisfies its age bounds, this imputation run
will be discarded and re-attempted, with a warning message issued. If the
desired number of runs (\code{iterations}, default \code{20}) cannot be imputed within
\code{max.iter.tries} (default \code{5*iterations}) attempts, an error will be raised.

Finally, missing death ages (stored in \code{CurAge} in the pedigree) of
individuals who are affected for at least one cancer and/or reported at
least one intervention are imputed, using the maximum of their cancer and
intervention ages as the lower bound (see \code{\link{.currentAgeImpute}}
documentation). If a lower imputation bound cannot be found using this
approach and the individual has children in the pedigree, we assign their
\code{CurAge} to be \code{15} plus the maximum difference in their living children's
ages in the current imputation. (If the individual has one or zero living
children, \code{CurAge} is simply set to \code{15}.) In cases where the individual
has no children in the pedigree, their \code{CurAge} is set to \code{1}.
}
\seealso{
Other impute: 
\code{\link{.boundAgeFromRelatives}()},
\code{\link{.cancerAgeImpute}()},
\code{\link{.currentAgeImpute}()},
\code{\link{.firstDegreeRelative}()},
\code{\link{.getAgeFromPed}()},
\code{\link{.secondDegreeRelative}()},
\code{\link{checkFam}()}
}
\concept{impute}
