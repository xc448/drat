% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/checkFamHelpers.R
\name{.pedStructureCheck}
\alias{.pedStructureCheck}
\title{Check pedigree structure and connectivity}
\usage{
.pedStructureCheck(
  ped,
  cancers = .getCancersFromFam(ped),
  proband = NULL,
  unknown.race = UNKNOWN_RACE,
  unknown.ancestry = UNKNOWN_ANCESTRY,
  ignore.proband.germ = FALSE,
  allow.age.zero = FALSE,
  keep.only.model.cancers = TRUE
)
}
\arguments{
\item{ped}{A pedigree data frame.}

\item{cancers}{A vector of short cancer names corresponding to the cancers
specified by the model that should be checked in \code{ped}. See
\code{PanelPRO:::CANCER_NAME_MAP$short} for the list of options. The default is
\code{.getCancersFromFam(ped)}, which is a vector of all the short cancer names
included in \code{ped}.}

\item{proband}{A numeric value or vector of the unique IDs in \code{ped}
corresponding to the proband(s). The default is \code{NULL}, in which case
probands will be inferred from the \code{isProband} column in \code{ped}, if it exists
and is valid. Otherwise, the IDs in \code{proband} will override the contents of
\code{ped$isProband}. The user can also specify \code{proband = "All"}, in which case
all IDs in the \code{ped} will be treated as probands.}

\item{unknown.race}{A character string indicating the default race to use
when \code{ped$race} is missing or unsupported. The default is
\code{PanelPRO:::UNKNOWN_RACE}.}

\item{unknown.ancestry}{A character string indicating the default ancestry
to use when \code{ped$Ancestry} is missing or unsupported. The default is
\code{PanelPRO:::UNKNOWN_ANCESTRY}.}

\item{ignore.proband.germ}{A logical value indicating if the proband(s)'s
germline testing results (if provided in \code{ped}) should be considered. The
default is \code{FALSE}, in which case the proband(s)'s germline testing results
will not be ignored.}

\item{allow.age.zero}{A logical value indicating whether zero ages can be
reported in \code{ped}. The default is \code{FALSE}, in which case \code{0} values in age
columns will be treated as missing. \code{allow.age.zero} should only be \code{TRUE}
if individuals are confirmed to born with a cancer.}

\item{keep.only.model.cancers}{A logical value indicating if only the
cancers in \code{cancers} should be kept in \code{ped}. The default is \code{TRUE}.}
}
\value{
A list with three components:
\itemize{
\item \code{ped_list}: A list where each element is a connected pedigree that is a
subset of the relatives in \code{ped}. Typically, \code{ped_list} has length \code{1},
unless there are multiple probands who are related to multiple disconnected
pedigrees. Relatives who are not connected to the proband(s) will be removed.
\item \code{proband}: A numeric value or vector of the unique IDs in the pedigree
corresponding to the proband(s). If the \code{proband} argument was specified by
the user, the returned list component will be identical. Otherwise, the IDs
will correspond to individuals in the \code{ped} argument where
\code{ped$isProband == 1}.
\item \code{rel_ls}: A list of the same length as \code{ped_list}, where each component is
a list of relationships for each pedigree in \code{ped_list}.
}
}
\description{
Checks that all required columns in pedigree are present, valid, and
consistent, printing informative error/warning messages and making
corrections when possible. It also removes family members that are not
connected to the proband(s) and splits the pedigree into a list of connected
sub-families, if necessary. A list of relationships for each connected
pedigree is also returned.
}
\details{
This function performs the following structural and connectivity checks,
issuing informative error/warning messages and making corrections when
possible:
\itemize{
\item Check expected columns
\itemize{
\item Check that all required columns (\code{ID}, \code{Sex}, \code{MotherID}, \code{FatherID},
\code{CurAge}, \code{Twins}, \code{isDead}, \code{race}, \code{riskmod}, \code{interAge}, \code{Ancestry})
are present in \code{ped}, and raise a \code{ColumnNameNotMatch} error if not.
}
\item Check probands
\itemize{
\item If a non-\code{NULL} proband argument was specified, the \code{proband} argument
will override the contents of the \code{ped$isProband} column. If
\code{proband == "All"}, all IDs in the pedigree will be used. Otherwise, check
if all IDs in \code{proband} are present in the pedigree, and raise a
\code{ProbandNotValid} error if not. If the \code{proband} argument does not match
with the probands implied by \code{ped$isProband}, print a
\code{ProbandOverwrite} message informing the user that the probands in
\code{ped$isProband} have been overridden by \code{proband}.
\item If the \code{proband} argument is \code{NULL} or unspecified by the user, search
\code{ped} for the \code{isProband} column, and raise a \code{ProbandNotValid} error if
it is not present in the data frame. Then, attempt to infer probands from
the \code{isProband} column, treating \code{NA} values as \code{0} (not probands). If no
probands (encoded as \code{1}) are specified by \code{isProband}, raise a
\code{ProbandNotValid} error. If \code{isProband} contains unexpected values, raise a
\code{TypeCheck} error.
\item Raise a \code{ProbandMissingAge} error if any proband's \code{CurAge} is missing.
\item Raise a \code{ProbandAgeOutOfBounds} warning if any proband's \code{CurAge} is
equal to PanelPRO:::MAXAGE, in which case their future risk will not be
estimated.
}
\item Check cancers and ages
\itemize{
\item Columns in \code{ped} with the naming convention \code{isAffX} are used to encode
cancer affection status and columns with the naming convention \code{AgeX} are
used to encode affection ages. \code{X} should be one of the cancer short
names in \code{PanelPRO::CANCER_NAME_MAP$short}.
\item Raise a \code{CancerNotFound} error if no \code{isAffX} columns can be found in
\code{ped}.
\item Raise a \code{BCNotExist} error if CBC specified in the model but \code{isAffBC} or
\code{AgeBC} columns cannot be found.
\item Raise a \code{CBC_BCAge} error if at least one subject has a BC age greater
than their CBC Age.
\item Raise a \code{CBC_Risk_Indicator} error if codings of \code{FirstBCType}, \code{AntiEstrogen},
\code{HRPreneoplasia}, and/or \code{BreastDensity} columns have unrecognized values.
\item Raise a \code{ModelCancersNotExist} error if \code{ped} does not contain \code{isAffX}
columns for all of the cancers in in the model specification \code{cancers}.
\item Raise an \code{AffectionAgeNotFound} error if any cancer does not have an
\code{AgeX} column.
\item If the \code{keep.only.model.cancers} argument is set to \code{TRUE} (the default
behavior), remove the \code{isAffX} and \code{AgeX} columns from \code{ped}
corresponding to cancers that are not in \code{cancers}.
\item Values other than \code{0} and \code{1} in the \code{isAffX} columns will be recoded
as \code{-999}, accompanied by an \code{InvalidNA} message.
\item If any individual is unaffected for a cancer but reports an affection
age for the cancer, the affection age will be set to \code{NA} and a
\code{CancerAgeMisSpecified} message will be raised.
\item If any individual develops cancer after their current age, a
\code{CancerAfterCurrentAge} error will be raised along with a suggestion to
substitute the maximum cancer age for the current age, if the user is
unable to resolve the age inputs otherwise.
\item If the \code{allow.age.zero} argument is set to \code{FALSE} (the default
behavior), set values in the \code{AgeX} and \code{CurAge} columns that are \code{0} to
\code{NA} and print a \code{FalseAgeZero} message. These values will be treated as
missing instead of \code{0}.
Values of \code{AgeX} and \code{CurAge} between \code{0} and \code{1} will be rounded up to
\code{1}; other decimal ages will be rounded to the nearest integer. In both
cases, an \code{AgeRounding} message will be printed.
}
\item Check IDs and personal information
\itemize{
\item IDs should be unique identifiers in the pedigree. If any IDs in the
\code{ped$ID} column are duplicated, raise a \code{PedIDInvalid} error.
\item Check that all IDs in the \code{MotherID} and \code{FatherID} columns can be
found in \code{ped$ID}. Set parent IDs that cannot be found in the \code{ID} to be
\code{NA}, so that they will be treated as missing from the pedigree, and raise
an \code{IDNotExist} warning.
\item Set missing or unsupported values of \code{ped$race} and \code{ped$Ancestry} to
the default race and ancestry specified by \code{unknown.race} and
\code{unknown.ancestry}, and raise an \code{InvalidNA} message.
\item Set unexpected values of \code{ped$Sex} to \code{NA} and raise an
\code{InvalidInputForcingNA} warning.
\item If \code{ped$isDead} is unknown (\code{NA}), assume that the individual is alive,
set the value to \code{0}, and raise an \code{InvalidNA} message.
\item Check that sexes of parents are valid, i.e. that all IDs in \code{MotherID}
are female and all IDs in \verb{Father ID} are male. Raise an \code{InvalidParentSex}
error if this is not the case.
}
\item Check identical twins
\itemize{
\item If \code{ped$Twins} is unknown (\code{NA}), assume that the individual is not an
identical twin, set the value to \code{0}, and raise an \code{InvalidNA} message.
\item The following steps describe consistency checks among homozygotic twins
and other identical multiple births. For more details,
see the \code{\link{.checkTwins}} documentation.
\item If only one twin is present in a twin set encoded by \code{ped$Twins}, remove
the individual's twin status by setting it to \code{0} and print a
\code{MissingTwinPair} message
\item Assume that twins must have the same \code{FatherID}, \code{MotherID}, and \code{Sex}.
If this information is missing for one (or more) twins but present in the
other(s), infer the missing information from the individuals where it is
known and print a \code{MissingTwinInfoModified} message. If the twins have
unresolvable mismatched information, remove the twin label and raise a
\code{TwinInfoConflict} warning.
\item Assume that living twins must have the same \code{CurAge}. If there is a
disagreement in \code{CurAge} among living twins, the proband's \code{CurAge}
overrides the others if one of the twins is a proband, and a
\code{TwinInfoConflict} warning will be raised. Otherwise, the average \code{CurAge}
will be assigned to all twins, and a \code{TwinInfoConflict} warning will be
raised.
\item If the \code{CurAge} of a living twin is less than the \code{CurAge} of a dead
twin, the average \code{CurAge} will be assigned to all twins, and a
\code{TwinInfoConflict} warning will be raised.
\item Assume that twins must have the same \code{race} and \code{Ancestry}. If there is
a disagreement, assign the default race and ancestry specified  by
\code{unknown.race} and \code{unknown.ancestry} to all twins, and raise a
\code{TwinInfoConflict} warning.
}
\item Check risk modifiers/interventions
\itemize{
\item Individuals who report \code{NA} for \code{riskmod} and \code{interAge} are assumed to
have no risk modifiers, and an \code{InvalidInputForcingNone} warning will be
raised.
\item If an individual's \code{riskmod} and \code{interAge} are of different lengths,
the longer will be truncated to match the length of the shorter. A
\code{RiskmodInconsistency} message will be raised.
Intervention ages between \code{0} and \code{1} will be rounded up to \code{1}; other
decimal ages will be rounded to the nearest integer. In both cases, an
\code{AgeRounding} message will be printed.
\item Unsupported risk modifiers and invalid intervention ages will be removed
and an \code{InvalidInputForcingNone} message will be printed.
\item Raise a \code{DuplicatedRiskmod} error if an individual has duplicated risk
modifiers stored in \code{riskmod}.
\item Raise an \code{InvalidRiskmod} error if an individual's intervention is not
preventative for the relevant cancer.
\item For individuals who do not report any risk modifiers in \code{ped}, set their
value of \code{riskmod} to \code{"None"} and \code{interAge} to \code{1}.
}
\item Check tumor biomarker testing
\itemize{
\item If an individual reports marker testing results in \code{ped}, but they are
not affected for the related cancer, remove their marker testing
results and raise an \code{InvalidTests} warning.
}
\item If \code{ignore.proband.germ = TRUE}, remove proband(s)'s germline testing
information from \code{ped}.
\item Check germline testing
\itemize{
\item If germline testing results are reported in \code{ped}, print a
\code{GermlineTestAssumption} message to inform the user that the default
variant (see \code{PanelPRO:::DEFAULT_VARIANTS}) will be assumed for each
mutation.
}
\item Typechecks
\itemize{
\item If any value of \code{AgeX} or \code{CurAge} exceeds \code{PanelPRO:::MAXAGE}, set the
values to \code{PanelPRO:::MAXAGE} and raise an \code{ExceedsMAXAGE} warning.
\item Raise a \code{TypeCheck} error if \code{Sex}, \code{Twins}, or \code{isAffX} is missing
(\code{NA}) for any individual.
\item Convert \code{NA} values to \code{-999} and raise an \code{InvalidNA} message.
}
\item Check connectivity
\itemize{
\item Attempt to correct inconsistent hereditary features (\code{race} and
\code{Ancestry}) among parents and children, and print a \code{HeredityFix} message.
For more details, see the \code{\link{.checkHeredity}} documentation.
\item Remove family members who are disconnected from the proband(s), raising
a \code{DisconectedFamilyRemoval} warning if so. For more details, see the
\code{\link{.removeDisconnected}} documentation.
\item Resolve inconsistent sex information. If an individual's sex is
incompatible with their parental identity, set the corresponding parent ID
for their children to be missing. If an individual's sex is incompatible
with their cancer affection status, set the corresponding \code{isAffX}
value to \code{0} and raise a \code{GenderCancerMismatch} warning. For more details,
see the \code{\link{.checkGender}} documentation. Finally, encode the
\code{Sex} column as \code{"Female"}/\code{"Male"} instead of \code{0}/\code{1}.
\item Validate the \code{AgeX_lower} and \code{AgeX_upper} columns for bounding cancer
affection age, or create them if necessary. If a lower bound is greater
than the corresponding upper bound, raise an \code{AgeBounds} error. For more
details, see the \code{\link{.boundAffectionAges}} documentation.
\item Check that \code{ped} does not have any invalid mating patterns, i.e.
intermarriages that create "loops", and raise a \code{BadMating} error if not.
For more details, see the \code{\link{.checkMating}} documentation.
}
}
}
\seealso{
\code{\link{checkFam}}, \code{\link{.checkTwins}},
\code{\link{.checkHeredity}}, \code{\link{.removeDisconnected}},
\code{\link{.checkGender}}, \code{\link{.boundAffectionAges}},
\code{\link{.checkMating}}

Other check: 
\code{\link{.boundAffectionAges}()},
\code{\link{.checkGender}()},
\code{\link{.checkHeredity}()},
\code{\link{.checkMating}()},
\code{\link{.checkTwins}()},
\code{\link{.findIDs}()},
\code{\link{.fix_gender_cancer}()},
\code{\link{.getOtherRels}()},
\code{\link{.getSpouses}()},
\code{\link{.removeDisconnected}()},
\code{\link{checkFam}()}
}
\concept{check}
